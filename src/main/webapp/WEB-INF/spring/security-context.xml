<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--  각각의  interceptr-url, form-login,logout 은  내부적으로 Filter를 만들어 사용한다.  그래서 web.xml에서 이 모든걸 엮어줄 FilterChaing을 따로 설정해준다. -->
	<!-- web.xml에서 사용하는 FilterChain의 대한 설정부분이다. -->
	<security:http use-expressions="true">
		<security:intercept-url pattern="/login" access="isAnonymous()" />
		<security:intercept-url pattern="/join" access="isAnonymous()" />
		<security:intercept-url pattern="/admin/*" access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/store/update" access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/notices/noticeadd" access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/notices/noticeupdate" access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/boards/boardadd" access="isAuthenticated()" />
		<security:intercept-url pattern="/user/*" access="hasAuthority('ROLE_USER')" />
		<security:intercept-url pattern="/**" access="permitAll" />
		
        <security:form-login login-page="/login"/>
        <security:csrf />
        <security:logout delete-cookies="JSESSIONID" logout-success-url="/"/>
        
        <security:access-denied-handler error-page="/"/>
	</security:http>
	<!-- form-login은 기본 로그인 폼 양식을 보여준다.logout은 로그아웃처리를.. -->

	<!-- 암호화를 위한 passwordEncoder -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<!-- DB연동은 data-source만 지정해주면 된다, 테이블이름은 정확히.   users 랑 authorities -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
		<security:password-encoder hash="bcrypt"/>
		 <security:jdbc-user-service data-source-ref="dataSource"
									 users-by-username-query="SELECT username, password, enabled  FROM user WHERE username=?"
									 authorities-by-username-query="SELECT username, authority  FROM user WHERE username=?"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>